pipeline {
    agent any

    tools {
        maven 'Maven 3.9.2'
        jdk 'Java 17'
    }

    environment {
        DOCKER_HUB_CREDENTIALS = 'docker-hub-creds'
        DOCKER_HUB_REPO = 'kadampratikpassport'
        BACKEND_IMAGE = "${DOCKER_HUB_REPO}/backend-app"
        FRONTEND_IMAGE = "${DOCKER_HUB_REPO}/frontend-app"
    }

    stages {
        stage('Clean Workspace') {
            steps {
                // Clean the workspace to avoid git clone errors
                cleanWs()
            }
        }

        stage('Clone Repository') {
            steps {
                script {
                    // Clone the repository directly into workspace
                    bat 'git clone https://github.com/kadampratikengg/AGRLANDEAUCTION.git .'
                }
            }
        }

        stage('Build Backend') {
            steps {
                dir('backend') {
                    script {
                        bat 'node -v'
                        bat 'npm -v'
                        bat 'npm install'
                    }
                }
            }
        }

        stage('Build Frontend') {
            steps {
                dir('frontend') {
                    bat 'node -v'
                    bat 'npm -v'
                    bat 'npm install'
                    bat 'npm run build'
                }
            }
        }

        stage('Docker Build & Push Backend') {
            steps {
                dir('backend') {
                    script {
                        docker.build("${BACKEND_IMAGE}:latest", '.')
                        docker.withRegistry('', DOCKER_HUB_CREDENTIALS) {
                            docker.image("${BACKEND_IMAGE}:latest").push()
                        }
                    }
                }
            }
        }

        stage('Docker Build & Push Frontend') {
            steps {
                dir('frontend') {
                    script {
                        docker.build("${FRONTEND_IMAGE}:latest", '.')
                        docker.withRegistry('', DOCKER_HUB_CREDENTIALS) {
                            docker.image("${FRONTEND_IMAGE}:latest").push()
                        }
                    }
                }
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                script {
                    bat '''
                        kubectl apply -f k8s/backend-deployment.yaml --validate=false
                        kubectl apply -f k8s/frontend-deployment.yaml --validate=false
                    '''
                }
            }
        }
    }
}
